{"ast":null,"code":"var _jsxFileName = \"/Users/r-maria/Desktop/dev/react-mesto-auth/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Header from './landing/Header.jsx';\nimport Main from './landing/Main.jsx';\nimport Footer from './landing/Footer.jsx';\nimport '../index.css';\nimport PopupWithForm from \"./landing/PopupWithForm\";\nimport ImagePopup from \"./landing/ImagePopup\";\nimport { api } from \"../utils/Api\";\nimport { auth } from \"../utils/Auth\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./landing/EditProfilePopup\";\nimport EditAvatarPopup from \"./landing/EditAvatarPopup\";\nimport AddCardPopup from \"./landing/AddCardPopup\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport imgAuthYes from '../images/auth_yes.png';\nimport imgAuthNo from '../images/auth_no.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = React.useState({\n    isOpen: false,\n    card: {}\n  });\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState(\"\");\n  const [cards, setCards] = React.useState([]);\n  const [loggedIn, setLoggedIn] = React.useState(false); //содержит статус пользователя — вошёл он в систему или нет\n  const [registerIn, setRegisterIn] = React.useState(false); //содержит статус пользователя — зарегистрирован он или нет\n  const navigate = useNavigate();\n\n  //загрузка информации о пользователе и карточек с сервера\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getCardList()]).then(([resultUser, resultCard]) => {\n      setCurrentUser(resultUser);\n      setCards(resultCard);\n    }).catch(err => console.log(`Ошибка загрузки с сервера: ${err}`));\n  }, []);\n\n  //загрузка новой информации о пользователе на сервер\n  function handleUpdateUser({\n    name,\n    about\n  }) {\n    api.patchUserInfo({\n      name,\n      about\n    }).then(resultUser => setCurrentUser(resultUser)).then(() => closeAllPopups()).catch(err => console.log(`Ошибка отправки данных о пользователе на сервер: ${err}`));\n  }\n\n  //загрузка нового аватара на сервер\n  function handleUpdateAvatar({\n    avatar\n  }) {\n    api.updateUserAvatar({\n      avatar\n    }).then(avatar => setCurrentUser(avatar)).then(() => closeAllPopups()).catch(err => console.log(`Ошибка обновления аватара: ${err}`));\n  }\n\n  //запрос на лайк/дизлайк карточки и получение обновленных данных карточки\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => setCards(state => state.map(c => c._id === card._id ? newCard : c))).catch(err => console.log(`Ошибка поддержки лайков/дизлайков: ${err}`));\n  }\n\n  //запрос на удаление карточки\n  function handleCardDelete() {\n    api.deleteCard(isDeleteCardPopupOpen.card._id).then(() => setCards(cards => cards.filter(c => c._id !== isDeleteCardPopupOpen.card._id))).then(() => closeAllPopups()).catch(err => console.log(`Ошибка удаления карточки: ${err}`));\n  }\n\n  //запрос на добавление новой карточки на сервер\n  function handleAddCardSubmit({\n    name,\n    link\n  }) {\n    api.addCard({\n      name,\n      link\n    }).then(newCard => setCards([newCard, ...cards])).then(() => closeAllPopups()).catch(err => console.log(`Ошибка добавления новой карточки на сервер: ${err}`));\n  }\n\n  //регистрация\n  function handleRegistration(email, password) {\n    auth.register(email, password).then(res => {\n      if (res) {\n        setRegisterIn(true);\n        handleInfoTooltipClick();\n        navigate('sign-in');\n      } else {\n        handleInfoTooltipClick();\n      }\n    }).catch(err => console.log(`Ошибка регистрации: ${err}`));\n  }\n\n  //авторизация\n  function handleAuthorization(email, password) {\n    auth.authorize(email, password).then(res => {\n      if (res) {\n        setLoggedIn(true);\n        navigate('/');\n      } else {\n        handleInfoTooltipClick();\n      }\n    }).catch(err => console.log(`Ошибка авторизации: ${err}`));\n  }\n  function handleCheckToken() {\n    auth.checkToken().then(data => {\n      if (data.jwt) {\n        localStorage.setItem('jwt', data.jwt);\n        return data;\n      }\n    }).catch(err => console.log(`Ошибка запроса проверки токена: ${err}`));\n  }\n\n  //открытие popup infoTooltip\n  function handleInfoTooltipClick() {\n    setIsInfoTooltipOpen(true);\n  }\n\n  //открытие popup edit avatar\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  //открытие popup edit profile\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  //открытие popup add card\n  function handleAddCardClick() {\n    setIsAddCardPopupOpen(true);\n  }\n\n  //открытие popup confirm delete card\n  function handleConfirmDeleteCardClick(currentCard) {\n    setIsDeleteCardPopupOpen({\n      isOpen: true,\n      card: currentCard\n    });\n  }\n\n  //открытие popup image\n  function handleCardOpenClick(card) {\n    setSelectedCard(card);\n  }\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsDeleteCardPopupOpen({\n      isOpen: false,\n      card: {}\n    });\n    setIsInfoTooltipOpen(false);\n    setSelectedCard({});\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        loggedIn: loggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onAuthorization: handleAuthorization\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: handleRegistration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Main, {\n            loggedIn: loggedIn,\n            onEditProfile: handleEditProfileClick,\n            onAddCard: handleAddCardClick,\n            onEditAvatar: handleEditAvatarClick,\n            onCardOpenClick: handleCardOpenClick,\n            onConfirmDeleteCard: handleConfirmDeleteCardClick,\n            onCardLike: handleCardLike,\n            cards: cards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        img: registerIn ? imgAuthYes : imgAuthNo,\n        title: registerIn || loggedIn ? \"Вы успешно зарегистрировались!\" : \"Что-то пошло не так! Попробуйте ещё раз.\",\n        isOpen: isInfoTooltipOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        name: \"delete\",\n        isOpen: isDeleteCardPopupOpen.isOpen,\n        onClose: closeAllPopups,\n        onSubmit: handleCardDelete,\n        buttonText: \"\\u0414\\u0430\",\n        buttonTextLoading: \"\\u0423\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u0435...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddCardPopup, {\n        isOpen: isAddCardPopupOpen,\n        onClose: closeAllPopups,\n        onAddCard: handleAddCardSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        isOpen: !!selectedCard.name,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"IZ3XZaujhp77rkI8b2Wa70Sw2dM=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Header","Main","Footer","PopupWithForm","ImagePopup","api","auth","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddCardPopup","Route","Routes","useNavigate","Register","Login","ProtectedRoute","InfoTooltip","imgAuthYes","imgAuthNo","jsxDEV","_jsxDEV","App","_s","isEditProfilePopupOpen","setIsEditProfilePopupOpen","useState","isAddCardPopupOpen","setIsAddCardPopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDeleteCardPopupOpen","setIsDeleteCardPopupOpen","isOpen","card","isInfoTooltipOpen","setIsInfoTooltipOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","registerIn","setRegisterIn","navigate","useEffect","Promise","all","getUserInfo","getCardList","then","resultUser","resultCard","catch","err","console","log","handleUpdateUser","name","about","patchUserInfo","closeAllPopups","handleUpdateAvatar","avatar","updateUserAvatar","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","deleteCard","filter","handleAddCardSubmit","link","addCard","handleRegistration","email","password","register","res","handleInfoTooltipClick","handleAuthorization","authorize","handleCheckToken","checkToken","data","jwt","localStorage","setItem","handleEditAvatarClick","handleEditProfileClick","handleAddCardClick","handleConfirmDeleteCardClick","currentCard","handleCardOpenClick","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onAuthorization","onRegister","onEditProfile","onAddCard","onEditAvatar","onCardOpenClick","onConfirmDeleteCard","onCardLike","img","title","onClose","onSubmit","buttonText","buttonTextLoading","onUpdateUser","onUpdateAvatar","_c","$RefreshReg$"],"sources":["/Users/r-maria/Desktop/dev/react-mesto-auth/src/components/App.jsx"],"sourcesContent":["import React from 'react';\nimport Header from './landing/Header.jsx';\nimport Main from './landing/Main.jsx';\nimport Footer from './landing/Footer.jsx';\nimport '../index.css';\nimport PopupWithForm from \"./landing/PopupWithForm\";\nimport ImagePopup from \"./landing/ImagePopup\";\nimport { api } from \"../utils/Api\";\nimport { auth } from \"../utils/Auth\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./landing/EditProfilePopup\";\nimport EditAvatarPopup from \"./landing/EditAvatarPopup\";\nimport AddCardPopup from \"./landing/AddCardPopup\";\nimport {Route, Routes, useNavigate} from \"react-router-dom\";\nimport Register from \"./Register\";\nimport Login from \"./Login\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport imgAuthYes from '../images/auth_yes.png';\nimport imgAuthNo from '../images/auth_no.png';\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddCardPopupOpen, setIsAddCardPopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = React.useState({isOpen : false, card: {}});\n    const [isInfoTooltipOpen, setIsInfoTooltipOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState({});\n    const [currentUser, setCurrentUser] = React.useState(\"\");\n    const [cards, setCards] = React.useState([]);\n    const [loggedIn, setLoggedIn] = React.useState(false); //содержит статус пользователя — вошёл он в систему или нет\n    const [registerIn, setRegisterIn] = React.useState(false); //содержит статус пользователя — зарегистрирован он или нет\n    const navigate = useNavigate();\n\n    //загрузка информации о пользователе и карточек с сервера\n    React.useEffect(() => {\n        Promise.all([api.getUserInfo(), api.getCardList()])\n            .then(( [resultUser, resultCard] ) => {\n                    setCurrentUser(resultUser)\n                    setCards(resultCard)\n            })\n            .catch(err => console.log(`Ошибка загрузки с сервера: ${err}`))\n    }, [])\n\n    //загрузка новой информации о пользователе на сервер\n    function handleUpdateUser({ name, about }) {\n        api.patchUserInfo({ name, about })\n            .then(resultUser => setCurrentUser(resultUser))\n            .then(() => closeAllPopups())\n            .catch(err => console.log(`Ошибка отправки данных о пользователе на сервер: ${err}`))\n    }\n\n    //загрузка нового аватара на сервер\n    function handleUpdateAvatar({ avatar }) {\n        api.updateUserAvatar({ avatar })\n            .then(avatar => setCurrentUser(avatar))\n            .then(() => closeAllPopups())\n            .catch(err => console.log(`Ошибка обновления аватара: ${err}`))\n    }\n\n    //запрос на лайк/дизлайк карточки и получение обновленных данных карточки\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then(newCard => setCards(state => state.map(c => c._id === card._id ? newCard : c)))\n            .catch(err => console.log(`Ошибка поддержки лайков/дизлайков: ${err}`))\n    }\n\n    //запрос на удаление карточки\n    function handleCardDelete() {\n        api.deleteCard(isDeleteCardPopupOpen.card._id)\n            .then(() => setCards(cards => cards.filter(c => c._id !== isDeleteCardPopupOpen.card._id)))\n            .then(() => closeAllPopups())\n            .catch(err => console.log(`Ошибка удаления карточки: ${err}`))\n    }\n\n    //запрос на добавление новой карточки на сервер\n    function handleAddCardSubmit({ name, link }) {\n        api.addCard({ name, link })\n            .then(newCard => setCards([newCard, ...cards]))\n            .then(() => closeAllPopups())\n            .catch(err => console.log(`Ошибка добавления новой карточки на сервер: ${err}`))\n    }\n\n    //регистрация\n    function handleRegistration( email, password ) {\n        auth.register( email, password )\n            .then(res => {\n                if (res) {\n                    setRegisterIn(true);\n                    handleInfoTooltipClick();\n                    navigate('sign-in');\n                } else {\n                    handleInfoTooltipClick();\n                }\n            })\n            .catch(err => console.log(`Ошибка регистрации: ${err}`))\n    }\n\n    //авторизация\n    function handleAuthorization( email, password ) {\n        auth.authorize( email, password)\n            .then(res => {\n                if(res) {\n                    setLoggedIn(true);\n                    navigate('/');\n                } else {\n                    handleInfoTooltipClick();\n                }\n            })\n            .catch(err => console.log(`Ошибка авторизации: ${err}`))\n    }\n\n    function handleCheckToken() {\n        auth.checkToken()\n            .then(data => {\n                if(data.jwt) {\n                    localStorage.setItem('jwt', data.jwt);\n                    return data;\n                }\n            })\n            .catch(err => console.log(`Ошибка запроса проверки токена: ${err}`))\n    }\n\n    //открытие popup infoTooltip\n    function handleInfoTooltipClick() {\n        setIsInfoTooltipOpen(true)\n    }\n\n    //открытие popup edit avatar\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true)\n    }\n\n    //открытие popup edit profile\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true)\n    }\n\n    //открытие popup add card\n    function handleAddCardClick() {\n        setIsAddCardPopupOpen(true)\n    }\n\n    //открытие popup confirm delete card\n    function handleConfirmDeleteCardClick(currentCard) {\n        setIsDeleteCardPopupOpen({ isOpen: true, card: currentCard })\n    }\n\n    //открытие popup image\n    function handleCardOpenClick(card) {\n        setSelectedCard(card)\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false)\n        setIsAddCardPopupOpen(false)\n        setIsEditAvatarPopupOpen(false)\n        setIsDeleteCardPopupOpen({isOpen: false, card: {}})\n        setIsInfoTooltipOpen(false)\n        setSelectedCard({})\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n                <Header\n                    loggedIn={loggedIn}\n                />\n                <Routes>\n                    <Route\n                        path='/sign-in'\n                        element={\n                            <Login\n                                onAuthorization={handleAuthorization}\n                            />\n                        }\n                    />\n                    <Route\n                        path='/sign-up'\n                        element={\n                            <Register\n                                onRegister={handleRegistration}\n                            />\n                        }\n                    />\n                    <Route\n                        path='/'\n                        element={\n                            <Main\n                                loggedIn={loggedIn}\n                                onEditProfile={handleEditProfileClick}\n                                onAddCard={handleAddCardClick}\n                                onEditAvatar={handleEditAvatarClick}\n                                onCardOpenClick={handleCardOpenClick}\n                                onConfirmDeleteCard={handleConfirmDeleteCardClick}\n                                onCardLike={handleCardLike}\n                                cards={cards}\n                            />\n                        }\n                    />\n                </Routes>\n\n                <Footer />\n\n                <InfoTooltip\n                    img={registerIn ? imgAuthYes : imgAuthNo}\n                    title={registerIn || loggedIn ? \"Вы успешно зарегистрировались!\" : \"Что-то пошло не так! Попробуйте ещё раз.\"}\n                    isOpen={isInfoTooltipOpen}\n                    onClose={closeAllPopups}\n                />\n\n                <PopupWithForm\n                    title=\"Вы уверены?\"\n                    name=\"delete\"\n                    isOpen={isDeleteCardPopupOpen.isOpen}\n                    onClose={closeAllPopups}\n                    onSubmit={handleCardDelete}\n                    buttonText='Да'\n                    buttonTextLoading='Удаление...'\n                />\n\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                />\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                />\n\n                <AddCardPopup\n                    isOpen={isAddCardPopupOpen}\n                    onClose={closeAllPopups}\n                    onAddCard={handleAddCardSubmit}\n                />\n\n                <ImagePopup\n                    card={selectedCard}\n                    isOpen={!!selectedCard.name}\n                    onClose={closeAllPopups}\n                />\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}