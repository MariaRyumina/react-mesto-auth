{"ast":null,"code":"class Auth {\n  constructor({\n    baseUrl\n  }) {\n    this._baseUrl = baseUrl;\n  }\n\n  //проверка корректности ответа, вызывать при каждом запросе\n  _handleResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(res.status);\n  }\n  register(email, password) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => {\n      console.log(res);\n      this._handleResponse(res);\n    });\n  }\n  authorize({\n    email,\n    password\n  }) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => {\n      this._handleResponse(res);\n    });\n  }\n\n  //запрос для проверки валидности токена и получения email для вставки в шапку сайта\n  fillingHeader() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${this._jwt}`\n      }\n    });\n  }\n}\nexport const auth = new Auth({\n  baseUrl: 'https://auth.nomoreparties.co'\n});","map":{"version":3,"names":["Auth","constructor","baseUrl","_baseUrl","_handleResponse","res","ok","json","Promise","reject","status","register","email","password","fetch","method","headers","body","JSON","stringify","then","console","log","authorize","fillingHeader","_jwt","auth"],"sources":["/Users/r-maria/Desktop/dev/react-mesto-auth/src/utils/Auth.jsx"],"sourcesContent":["class Auth {\n    constructor({ baseUrl }) {\n        this._baseUrl = baseUrl;\n    }\n\n    //проверка корректности ответа, вызывать при каждом запросе\n    _handleResponse (res) {\n        if (res.ok) {\n            return res.json()\n        }\n        return Promise.reject(res.status)\n    }\n\n    register( email, password ) {\n        return fetch(`${this._baseUrl}/signup`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ email, password })\n        })\n        .then(res => {\n            console.log(res)\n            this._handleResponse(res)\n        })\n    }\n\n    authorize({ email, password }) {\n        return fetch(`${this._baseUrl}/signin`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ email, password })\n        })\n            .then(res => {\n                this._handleResponse(res)\n            })\n    }\n\n    //запрос для проверки валидности токена и получения email для вставки в шапку сайта\n    fillingHeader() {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'GET',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\" : `Bearer ${this._jwt}`\n            }\n        })\n    }\n}\n\nexport const auth = new Auth ({\n    baseUrl: 'https://auth.nomoreparties.co'\n})\n"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACPC,WAAWA,CAAC;IAAEC;EAAQ,CAAC,EAAE;IACrB,IAAI,CAACC,QAAQ,GAAGD,OAAO;EAC3B;;EAEA;EACAE,eAAeA,CAAEC,GAAG,EAAE;IAClB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACR,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACrB;IACA,OAAOC,OAAO,CAACC,MAAM,CAACJ,GAAG,CAACK,MAAM,CAAC;EACrC;EAEAC,QAAQA,CAAEC,KAAK,EAAEC,QAAQ,EAAG;IACxB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACX,QAAS,SAAQ,EAAE;MACpCY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,KAAK;QAAEC;MAAS,CAAC;IAC5C,CAAC,CAAC,CACDO,IAAI,CAACf,GAAG,IAAI;MACTgB,OAAO,CAACC,GAAG,CAACjB,GAAG,CAAC;MAChB,IAAI,CAACD,eAAe,CAACC,GAAG,CAAC;IAC7B,CAAC,CAAC;EACN;EAEAkB,SAASA,CAAC;IAAEX,KAAK;IAAEC;EAAS,CAAC,EAAE;IAC3B,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACX,QAAS,SAAQ,EAAE;MACpCY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,KAAK;QAAEC;MAAS,CAAC;IAC5C,CAAC,CAAC,CACGO,IAAI,CAACf,GAAG,IAAI;MACT,IAAI,CAACD,eAAe,CAACC,GAAG,CAAC;IAC7B,CAAC,CAAC;EACV;;EAEA;EACAmB,aAAaA,CAAA,EAAG;IACZ,OAAOV,KAAK,CAAE,GAAE,IAAI,CAACX,QAAS,WAAU,EAAE;MACtCY,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAI,UAAS,IAAI,CAACS,IAAK;MAC1C;IACJ,CAAC,CAAC;EACN;AACJ;AAEA,OAAO,MAAMC,IAAI,GAAG,IAAI1B,IAAI,CAAE;EAC1BE,OAAO,EAAE;AACb,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}