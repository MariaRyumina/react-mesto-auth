{"ast":null,"code":"class Auth {\n  constructor({\n    baseUrl\n  }) {\n    this._baseUrl = baseUrl;\n  }\n  register(email, password) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"email\": email,\n        \"password\": password\n      })\n    }).then(res => res.ok ? res.json() : null);\n  }\n  authorize(email, password) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"email\": email,\n        \"password\": password\n      })\n    }).then(res => res.ok ? res.json() : null).then(data => {\n      if (data != null && data.token) {\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('email', email);\n        return true;\n      }\n    });\n  }\n\n  //запрос для проверки валидности токена и получения email для вставки в шапку сайта\n  checkToken(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then(res => res.ok);\n  }\n}\nexport const auth = new Auth({\n  baseUrl: 'https://auth.nomoreparties.co'\n});","map":{"version":3,"names":["Auth","constructor","baseUrl","_baseUrl","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","ok","json","authorize","data","token","localStorage","setItem","checkToken","auth"],"sources":["/Users/r-maria/Desktop/dev/react-mesto-auth/src/utils/Auth.jsx"],"sourcesContent":["class Auth {\n    constructor({ baseUrl }) {\n        this._baseUrl = baseUrl;\n    }\n\n    register( email, password ) {\n        return fetch(`${this._baseUrl}/signup`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \"email\": email, \"password\": password })\n        })\n        .then(res => res.ok ? res.json() : null)\n    }\n\n    authorize( email, password ) {\n        return fetch(`${this._baseUrl}/signin`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ \"email\": email, \"password\": password })\n        })\n            .then(res => res.ok ? res.json() : null)\n            .then((data) => {\n                if (data != null && data.token) {\n                    localStorage.setItem('token', data.token);\n                    localStorage.setItem('email', email);\n                    return true;\n                }\n            })\n    }\n\n    //запрос для проверки валидности токена и получения email для вставки в шапку сайта\n    checkToken(token) {\n        return fetch(`${this._baseUrl}/users/me`, {\n            method: 'GET',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\" : `Bearer ${token}`\n            }\n        })\n            .then(res => res.ok)\n    }\n}\n\nexport const auth = new Auth ({\n    baseUrl: 'https://auth.nomoreparties.co'\n})\n"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACPC,WAAWA,CAAC;IAAEC;EAAQ,CAAC,EAAE;IACrB,IAAI,CAACC,QAAQ,GAAGD,OAAO;EAC3B;EAEAE,QAAQA,CAAEC,KAAK,EAAEC,QAAQ,EAAG;IACxB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACJ,QAAS,SAAQ,EAAE;MACpCK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE,OAAO,EAAEP,KAAK;QAAE,UAAU,EAAEC;MAAS,CAAC;IACjE,CAAC,CAAC,CACDO,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;EAC5C;EAEAC,SAASA,CAAEZ,KAAK,EAAEC,QAAQ,EAAG;IACzB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACJ,QAAS,SAAQ,EAAE;MACpCK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE,OAAO,EAAEP,KAAK;QAAE,UAAU,EAAEC;MAAS,CAAC;IACjE,CAAC,CAAC,CACGO,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CACvCH,IAAI,CAAEK,IAAI,IAAK;MACZ,IAAIA,IAAI,IAAI,IAAI,IAAIA,IAAI,CAACC,KAAK,EAAE;QAC5BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACC,KAAK,CAAC;QACzCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEhB,KAAK,CAAC;QACpC,OAAO,IAAI;MACf;IACJ,CAAC,CAAC;EACV;;EAEA;EACAiB,UAAUA,CAACH,KAAK,EAAE;IACd,OAAOZ,KAAK,CAAE,GAAE,IAAI,CAACJ,QAAS,WAAU,EAAE;MACtCK,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAI,UAASU,KAAM;MACtC;IACJ,CAAC,CAAC,CACGN,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,CAAC;EAC5B;AACJ;AAEA,OAAO,MAAMQ,IAAI,GAAG,IAAIvB,IAAI,CAAE;EAC1BE,OAAO,EAAE;AACb,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}